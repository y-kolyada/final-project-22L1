# -*- mode: ruby -*-
# vi: set ft=ruby :

=begin
  Vagrant script to build CORP, DEV, QA, INTEG and PROD environment
=end

box = "centos/stream8"
version = "20210210.0"

servers = [
  { :hostname => "dev", :box => "centos/stream8", :version => "20210210.0", 
    :ram => 3072, :cpu => 2, :host_port => 22251, :guest_ip => "10.0.10.51" },
  { :hostname => "qa", :box => "centos/stream8", :version => "20210210.0", 
    :ram => 3072, :cpu => 2, :host_port => 22252, :guest_ip => "10.0.10.52" },
  { :hostname => "integ", :box => "centos/stream8", :version => "20210210.0", 
    :ram => 3072, :cpu => 2, :host_port => 22253, :guest_ip => "10.0.10.53" },
  { :hostname => "prod", :box => "centos/stream8", :version => "20210210.0", 
    :ram => 3072, :cpu => 2, :host_port => 22254, :guest_ip => "10.0.10.54" }
]

devs = [
  { :hostname => "dev001", :box => "centos/stream8", :version => "20210210.0", 
    :ram => 3072, :cpu => 2, :host_port => 22261, :guest_ip => "10.0.10.61" }
]

SSH_PORT_SUFFIX = 50
IP_PREFFIX = "10.0.10."
IP_SUFFIX = 50
$GW_IP = "10.0.10.1"
$HOST_IP = "10.0.10.2"

set_server_multi_user_target = <<-SHELL
  dnf groupinstall -y "Server"
  dnf groupremove -y "Workstation"
  dnf groupremove -y "Server with GIU"
  systemctl set-default multi-user.target
  systemctl get-default 
  dnf -y update
SHELL

set_server_gui_multi_user_target = <<-SHELL
  dnf groupinstall -y "Server with GIU"
  dnf groupremove -y "Workstation"
  dnf groupremove -y "Server"
  systemctl set-default graphical.target
  systemctl get-default 
  dnf -y update
SHELL

set_workstation_graphical_target = <<-SHELL
  dnf groupinstall -y "Workstation"
  dnf groupremove -y "Server"
  dnf groupremove -y "Server with GIU"
  systemctl set-default graphical.target
  systemctl get-default 
  dnf -y update
SHELL

get_current_default_kernel = <<-SHELL
  #grubby --set-default /boot/vmlinuz-4.18.0-408.el8.x86_64  
  rpm -q kernel
  ls /boot/vm*
  grubby --default-kernel  
SHELL

remove_old_kernels = <<-SHELL
  dnf -y remove --oldinstallonly --setopt installonly_limit=2 kernel
SHELL

update_kernel = <<-SHELL
  dnf update -y kernel-*  
SHELL

update_system = <<-SHELL
  dnf update -y  
SHELL

change_default_route = <<-SHELL
  echo "GW_IP: ${GW_IP}"
  RM_ROUTE=$(ip route | grep "default via 10.0.2.2 dev eth0")
  if [[ $RM_ROUTE == *"default via 10.0.2.2 dev eth0"* ]]; then
    ip route del default via 10.0.2.2 dev eth0
  fi
  RM_ROUTE=$(ip route | grep "default via 10.0.10.1 dev eth1")
  if [[ -z $RM_ROUTE ]]; then
    ip route add default via ${GW_IP} dev eth1
  fi
SHELL

install_virtualbox_guets_additions = <<-SHELL
  #dnf install -y gcc make perl kernel-devel kernel-headers bzip2 dkms
  dnf install -y epel-release
  dnf install -y gcc make perl kernel-devel kernel-headers bzip2 dkms
  rpm -q kernel
  wget -q https://download.virtualbox.org/virtualbox/7.0.4/VBoxGuestAdditions_7.0.4.iso -P /tmp
  mkdir -p /mnt/GA
  mount /tmp/VBoxGuestAdditions_7.0.4.iso /mnt/GA
  cd /mnt/GA
  sh ./VBoxLinuxAdditions.run install
  #systemctl disable vboxadd-service
  #systemctl disable vboxadd
  #systemctl stop vboxadd-service
  #systemctl stop vboxadd
SHELL

install_python39 = <<-SHELL
  dnf install -y epel-release
  dnf install -y python39
  #alternatives --set python $(which python3.9)
SHELL

set_alternatives = <<-SHELL    
  alternatives --remove-all python
  alternatives --install /usr/bin/python python /usr/bin/python3.9 111 --family python
  # alternatives --set python /usr/bin/python3.9
  # alternatives --config python <<< '1'
  alternatives --list | grep python
SHELL

Vagrant.configure("2") do |config|
  # https://docs.vagrantup.com.
  # https://vagrantcloud.com/search.
  config.vm.box = "centos/stream8"
  config.vm.box_version = "20210210.0"
  
  ### CORP Environment: Developers workstations
  i = 0
  devs.each do |dev|
    i += 1
    box_image = dev[:box] ? dev[:box] : box
    box_version = dev[:version] ? dev[:version] : version
    config.vm.define dev[:hostname] do |conf|
      # VM conf
      conf.vm.box = box_image.to_s
      conf.vm.box_version = box_version.to_s
      conf.vm.host_name = dev[:hostname]
      
      cpu = dev[:cpu] ? dev[:cpu] : 1;
      memory = dev[:ram] ? dev[:ram] : 512
      conf.vm.provider "virtualbox" do |v|
        v.gui = true
        v.name = dev[:hostname]
        v.memory = memory.to_s
        v.cpus = cpu.to_s
        v.check_guest_additions = false
        v.customize ["modifyvm", :id, "--graphicscontroller", "VMSVGA"] 
        v.customize ["modifyvm", :id, "--vram", "128"] 
      end

      # SSH conf
      host_port = dev[:host_port] ? dev[:host_port] : "222#{SSH_PORT_SUFFIX + 10 + i}"
      conf.vm.network :forwarded_port, guest: 22, host: host_port.to_s, 
        host_ip: "127.0.0.1", id: "ssh"

      # Net conf
      guest_ip = dev[:guest_ip] ? dev[:guest_ip] : IP_PREFFIX + "#{IP_SUFFIX + 10 + i}"
      conf.vm.network "public_network", bridge: 'enp8s0', ip: guest_ip
      
      conf.vm.provision "change_default_route", type: "shell", run: "always", 
        env: {"GW_IP" => $GW_IP}, inline: change_default_route

      # OS Conf
      conf.vm.provision "set_workstation_graphical_target", type: "shell", run: "once", 
      inline: set_workstation_graphical_target

      conf.vm.provision "get_current_default_kernel", type: "shell", run: "always", 
        inline: get_current_default_kernel

      conf.vm.provision "install_virtualbox_guets_additions", type: "shell", run: "never", 
        inline: install_virtualbox_guets_additions
    end
  end
  
  ### DEV, QA, INTEG, PROD Environment
  i = 0
  servers.each do |server|
    i += 1
    box_image = server[:box] ? server[:box] : box
    box_version = server[:version] ? server[:version] : version
    config.vm.define server[:hostname] do |conf|
      # VM conf
      conf.vm.box = box_image.to_s
      conf.vm.box_version = box_version.to_s
      conf.vm.host_name = server[:hostname]
      
      cpu = server[:cpu] ? server[:cpu] : 1;
      memory = server[:ram] ? server[:ram] : 512
      conf.vm.provider "virtualbox" do |v|
        v.gui = true
        v.name = server[:hostname]
        v.memory = memory.to_s
        v.cpus = cpu.to_s
        v.check_guest_additions = false
        v.customize ["modifyvm", :id, "--graphicscontroller", "VMSVGA"] 
        v.customize ["modifyvm", :id, "--vram", "128"] 
      end

      # SSH conf
      host_port = server[:host_port] ? server[:host_port] : "222#{SSH_PORT_SUFFIX + i}"
      conf.vm.network :forwarded_port, guest: 22, host: host_port.to_s, 
        host_ip: "127.0.0.1", id: "ssh"
      
      # Net conf
      guest_ip = server[:guest_ip] ? server[:guest_ip] : IP_PREFFIX + "#{IP_SUFFIX + i}"
      conf.vm.network "public_network", bridge: 'enp8s0', ip: guest_ip

      conf.vm.provision "change_default_route", type: "shell", run: "always", 
        env: {"GW_IP" => $GW_IP}, inline: change_default_route

      # OS Conf      
      conf.vm.provision "set_server_multi_user_target", type: "shell", run: "once", 
        inline: set_server_multi_user_target

      conf.vm.provision "get_current_default_kernel", type: "shell", run: "always", 
        inline: get_current_default_kernel

      conf.vm.provision "install_virtualbox_guets_additions", type: "shell", run: "never", 
        inline: install_virtualbox_guets_additions
    end
  end  

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = true
  end

  config.vm.provision "update_kernel", type: "shell", run: "once", 
    inline: update_kernel
 
  config.vm.provision "remove_old_kernels", type: "shell", run: "never", 
    inline: remove_old_kernels
  
  config.vm.provision "update_system", type: "shell", run: "always", 
    inline: update_system

  config.vm.provision "install_python39", type: "shell", run: "once",
    inline: install_python39

  config.vm.provision "set_alternatives", type: "shell", run: "once",
    inline: set_alternatives

end